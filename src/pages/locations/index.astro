---
import Layout from '../../layouts/Layout.astro';
import LeadFormPanel from '../../components/LeadFormPanel.tsx';
import { getCollection } from 'astro:content';

const locations = await getCollection('locations');
const services = await getCollection('services');

const grouped = locations.reduce<Record<string, typeof locations>>( (acc, location) => {
  const state = location.data.state;
  acc[state] = acc[state] ? [...acc[state], location] : [location];
  return acc;
}, {});

const submitMode = import.meta.env.PUBLIC_LEADS_MODE === 'live' ? 'live' : 'stub';
const captchaProvider = (import.meta.env.PUBLIC_CAPTCHA_PROVIDER as 'turnstile' | 'recaptcha' | undefined) ?? undefined;
const siteKey =
  captchaProvider === 'turnstile'
    ? import.meta.env.PUBLIC_TURNSTILE_SITE_KEY
    : captchaProvider === 'recaptcha'
      ? import.meta.env.PUBLIC_RECAPTCHA_SITE_KEY
      : undefined;

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'CollectionPage',
  name: 'Service areas',
  url: `${Astro.url.origin}/locations`,
};
---

<Layout title="Locations | Crafted Niche Leads" description="Explore markets where our landscaping and interior specialists are active." structuredData={structuredData}>
  <section class="border-b border-neutral-200 bg-neutral-50/70">
    <div class="container grid gap-10 py-16 lg:grid-cols-[1.1fr,0.9fr] lg:items-start">
      <div class="space-y-6">
        <p class="text-xs font-semibold uppercase tracking-[0.25em] text-brand-600">Service markets</p>
        <h1 class="font-heading text-4xl font-semibold text-neutral-900">High-intent metros launching first</h1>
        <p class="max-w-2xl text-sm text-neutral-600">
          We focus on metros with strong demand for sustainable landscaping and premium interior storage upgrades. Submit your city to accelerate our rollout.
        </p>
      </div>
      <LeadFormPanel
        services={services.map((svc) => ({
          slug: svc.data.slug,
          name: svc.data.name,
          subservices: svc.data.subservices ?? [],
        }))}
        submitMode={submitMode}
        captcha={captchaProvider ? { provider: captchaProvider, siteKey } : undefined}
        className="shadow-card"
      />
    </div>
  </section>

  <section class="container space-y-10 py-16">
    {Object.entries(grouped).map(([state, entries]) => (
      <div class="space-y-4" id={state.toLowerCase().replace(/\s+/g, '-') }>
        <h2 class="font-heading text-2xl font-semibold text-neutral-900">{state}</h2>
        <div class="grid gap-5 md:grid-cols-3">
          {entries.map((entry) => (
            <article class="rounded-2xl border border-neutral-200 bg-white/90 p-5 shadow-card">
              <h3 class="font-heading text-xl font-semibold text-neutral-900">{entry.data.city}</h3>
              <p class="mt-2 text-sm text-neutral-600">{entry.data.intro}</p>
              {entry.data.neighborhoods?.length ? (
                <p class="mt-4 text-xs uppercase tracking-wide text-neutral-500">
                  Key neighborhoods: {entry.data.neighborhoods.join(', ')}
                </p>
              ) : null}
              <a class="mt-4 inline-flex items-center text-sm font-semibold text-brand-600 hover:text-brand-700" href={`/locations/${entry.data.slug}`}>
                Explore {entry.data.city}
                <svg viewBox="0 0 24 24" class="ml-1 h-4 w-4 fill-current" aria-hidden="true">
                  <path d="M5 12a1 1 0 0 1 1-1h10.586l-3.293-3.293a1 1 0 0 1 1.414-1.414l5 5a1 1 0 0 1 0 1.414l-5 5a1 1 0 1 1-1.414-1.414L16.586 13H6a1 1 0 0 1-1-1Z" />
                </svg>
              </a>
            </article>
          ))}
        </div>
      </div>
    ))}
  </section>
</Layout>
