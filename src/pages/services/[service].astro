---
import Layout from '../../layouts/Layout.astro';
import LeadCaptureSection from '../../components/LeadCaptureSection.astro';
import FAQList from '../../components/FAQList.astro';
import { getCollection } from 'astro:content';
import { toLeadFormServiceOptions } from '../../lib/services';

export async function getStaticPaths() {
  const services = await getCollection('services');
  const subservices = await getCollection('subservices');

  const serviceOptions = toLeadFormServiceOptions(services);

  return services.map((service) => ({
    params: { service: service.data.slug },
    props: {
      service,
      subserviceEntries: subservices.filter((entry) => entry.data.service === service.data.slug),
      allServices: serviceOptions,
    },
  }));
}

const { service, subserviceEntries, allServices } = Astro.props;
const data = service.data;

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'Service',
  name: data.name,
  serviceType: data.name,
  description: data.summary,
  areaServed: 'United States',
};

const illustrationMap: Record<string, string> = {
  landscaping: '/images/placeholders/home-hero-1.svg',
  hardscaping: '/images/placeholders/service-card.svg',
  'closet-interior': '/images/placeholders/home-hero-2.svg',
};

const illustration = illustrationMap[data.slug] ?? '/images/placeholders/service-card.svg';
---

<Layout title={`${data.name} | Austin Home Renovation Hub`} description={data.summary} structuredData={structuredData}>
  <LeadCaptureSection
    services={allServices}
    eyebrow={data.name}
    title={data.heroTitle ?? data.name}
    description={data.heroCopy ?? data.summary}
    formClassName="shadow-card"
  >
    <div class="overflow-hidden rounded-2xl border border-neutral-200 bg-white">
      <img src={illustration} alt={`${data.name} inspiration`} class="h-48 w-full object-cover" loading="lazy" />
    </div>
    {data.benefits?.length ? (
      <ul class="grid gap-3 sm:grid-cols-2">
        {data.benefits.map((benefit) => (
          <li class="rounded-2xl border border-neutral-200 bg-white/90 p-4 text-sm text-neutral-700 shadow-card">
            {benefit}
          </li>
        ))}
      </ul>
    ) : null}
  </LeadCaptureSection>

  <section class="container space-y-12 py-16">
    {data.subservices?.length ? (
      <div class="space-y-4">
        <h2 class="font-heading text-3xl font-semibold text-neutral-900">Featured specialties</h2>
        <div class="grid gap-5 md:grid-cols-2">
          {data.subservices.map((sub) => {
            const detail = subserviceEntries.find((entry) => entry.data.slug === sub.slug);
            return (
              <article class="rounded-2xl border border-neutral-200 bg-white/90 p-6 shadow-card">
                <h3 class="font-heading text-xl font-semibold text-neutral-900">{sub.name}</h3>
                <p class="mt-2 text-sm text-neutral-600">{detail?.data.intro ?? sub.summary}</p>
                {detail?.data.highlights?.length ? (
                  <ul class="mt-4 space-y-2 text-sm text-neutral-600">
                    {detail.data.highlights.map((point) => (
                      <li class="flex items-start gap-2">
                        <span class="mt-1 inline-block h-1.5 w-1.5 rounded-full bg-brand-500"></span>
                        <span>{point}</span>
                      </li>
                    ))}
                  </ul>
                ) : null}
                {detail?.data.avgCost ? (
                  <p class="mt-4 inline-flex items-center rounded-full bg-neutral-100 px-3 py-1 text-xs font-semibold text-neutral-700">
                    Typical: ${detail.data.avgCost.min.toLocaleString()} - ${detail.data.avgCost.max.toLocaleString()}
                  </p>
                ) : null}
                <a class="mt-5 inline-flex items-center text-sm font-semibold text-brand-600 hover:text-brand-700" href={`/services/${data.slug}/${sub.slug}`}>
                  Deep dive into {sub.name}
                  <svg viewBox="0 0 24 24" class="ml-1 h-4 w-4 fill-current" aria-hidden="true">
                    <path d="M5 12a1 1 0 0 1 1-1h10.586l-3.293-3.293a1 1 0 0 1 1.414-1.414l5 5a1 1 0 0 1 0 1.414l-5 5a1 1 0 1 1-1.414-1.414L16.586 13H6a1 1 0 0 1-1-1Z" />
                  </svg>
                </a>
              </article>
            );
          })}
        </div>
      </div>
    ) : null}

    <FAQList items={data.faqs ?? []} />
  </section>
</Layout>
